const _0x9e9fdb = _0x1120;
(function(_0x20ce37, _0x4f91e2) { const _0x49dd68 = _0x1120,
        _0x14c29c = _0x20ce37(); while (!![]) { try { const _0x1ccbbf = -parseInt(_0x49dd68(0x1ac)) / (-0x335 + 0x1f51 + -0x59f * 0x5) + parseInt(_0x49dd68(0x177)) / (0x850 + -0x2a3 + -0x5ab) * (-parseInt(_0x49dd68(0x174)) / (-0xefe + -0x1d9a + 0x2c9b)) + -parseInt(_0x49dd68(0x1ae)) / (-0x1a8 * 0x9 + 0x1 * -0xabe + 0x49 * 0x5a) * (parseInt(_0x49dd68(0x15e)) / (0x6 * -0x323 + -0x18d5 + -0x22f * -0x14)) + parseInt(_0x49dd68(0x175)) / (0x24b + -0x28 * 0x2b + 0x473 * 0x1) + -parseInt(_0x49dd68(0x173)) / (-0xb8 * 0x11 + 0x1 * -0x1adb + 0x271a) + -parseInt(_0x49dd68(0x189)) / (0x85f + 0x353 * -0x5 + -0x424 * -0x2) + parseInt(_0x49dd68(0x14f)) / (-0x91c + -0xc * 0x11b + 0x1669); if (_0x1ccbbf === _0x4f91e2) break;
            else _0x14c29c['push'](_0x14c29c['shift']()); } catch (_0x4cad98) { _0x14c29c['push'](_0x14c29c['shift']()); } } }(_0x4dfb, 0x20297 * 0x1 + 0x75 * -0x6a5 + 0x2ae20), module[_0x9e9fdb(0x165)][_0x9e9fdb(0x198)] = { 'name': _0x9e9fdb(0x16f), 'version': _0x9e9fdb(0x18e), 'credits': _0x9e9fdb(0x18b), 'hasPermssion': 0x2, 'description': _0x9e9fdb(0x183) + _0x9e9fdb(0x170) + _0x9e9fdb(0x19b), 'commandCategory': _0x9e9fdb(0x156), 'usages': _0x9e9fdb(0x15c) + _0x9e9fdb(0x199), 'cooldowns': 0x5 }, module[_0x9e9fdb(0x165)][_0x9e9fdb(0x158) + 'y'] = async function({ api: _0xa251df, event: _0x1452a9, args: _0x2d1a9e, Threads: _0x4163f7, handleReply: _0x2ed406 }) { const _0x1200a6 = _0x9e9fdb,
        _0x3602cf = { 'haXiz': function(_0x1543a4, _0x35712a) { return _0x1543a4 !== _0x35712a; }, 'dkuhR': function(_0x3554a2, _0x417e5d) { return _0x3554a2(_0x417e5d); }, 'qBXDP': function(_0x1cd7f3, _0x5b8ad4) { return _0x1cd7f3(_0x5b8ad4); }, 'BoMUh': _0x1200a6(0x17d) + _0x1200a6(0x149), 'yDmSR': _0x1200a6(0x1a9) + _0x1200a6(0x1a0), 'qqupp': _0x1200a6(0x18d), 'ZBRUc': function(_0x28202d, _0x28a23f) { return _0x28202d - _0x28a23f; }, 'XEfrl': function(_0xef3d4f, _0x26410f) { return _0xef3d4f - _0x26410f; }, 'YPYad': _0x1200a6(0x147), 'fnTtK': function(_0x39a688, _0x53855a) { return _0x39a688 == _0x53855a; }, 'STAxb': _0x1200a6(0x19d), 'qbxYa': _0x1200a6(0x171), 'txkql': function(_0x11e394, _0x18fec9) { return _0x11e394 == _0x18fec9; }, 'kYGkx': _0x1200a6(0x17e), 'fFvZL': _0x1200a6(0x194), 'ugJNX': function(_0x56b25d, _0x3295b1) { return _0x56b25d == _0x3295b1; }, 'CMJDW': function(_0x3cc64b, _0x22c3e3) { return _0x3cc64b == _0x22c3e3; }, 'tfLVP': _0x1200a6(0x197), 'hQchM': _0x1200a6(0x1aa), 'CwaeS': function(_0x1d2a04, _0x24c3be) { return _0x1d2a04 == _0x24c3be; }, 'siiGk': _0x1200a6(0x19f), 'djEgl': function(_0x157a9d, _0x440828) { return _0x157a9d == _0x440828; }, 'qVXVW': _0x1200a6(0x161) },
        { threadID: _0x51be4b, messageID: _0x266366 } = _0x1452a9; if (_0x3602cf[_0x1200a6(0x16e)](_0x3602cf[_0x1200a6(0x162)](parseInt, _0x1452a9[_0x1200a6(0x159)]), _0x3602cf[_0x1200a6(0x17f)](parseInt, _0x2ed406[_0x1200a6(0x150)]))) return; const _0x1c8211 = _0x3602cf[_0x1200a6(0x17f)](require, _0x3602cf[_0x1200a6(0x176)]),
        _0x5a6b6d = _0x1c8211['tz'](_0x3602cf[_0x1200a6(0x14c)])[_0x1200a6(0x181)](_0x3602cf[_0x1200a6(0x1a3)]); var _0x35ca0b = _0x1452a9[_0x1200a6(0x1a6)][_0x1200a6(0x17b)]('\x20'),
        _0x37e1bd = _0x2ed406[_0x1200a6(0x17a)][_0x3602cf[_0x1200a6(0x163)](_0x35ca0b[-0xe78 + 0xfc9 + -0x2 * 0xa8], 0x1087 * -0x1 + 0x136 * -0x5 + 0x2 * 0xb4b)],
        _0x45eb04 = _0x2ed406[_0x1200a6(0x185)][_0x3602cf[_0x1200a6(0x180)](_0x35ca0b[-0x17d5 * -0x1 + 0x55a + -0x1d2e], 0xc * 0x1d4 + -0x1542 + 0x1 * -0xad)]; switch (_0x2ed406[_0x1200a6(0x1af)]) {
        case _0x3602cf[_0x1200a6(0x1ad)]:
            { if (_0x3602cf[_0x1200a6(0x167)](_0x35ca0b[0x1 * 0x258f + -0x1 * -0x1f42 + -0x44d1], _0x3602cf[_0x1200a6(0x169)]) || _0x3602cf[_0x1200a6(0x167)](_0x35ca0b[0x1 * -0xfd6 + 0xfd3 + 0x3], _0x3602cf[_0x1200a6(0x193)])) { const _0x42b625 = (await _0x4163f7[_0x1200a6(0x16d)](_0x37e1bd))[_0x1200a6(0x188)] || {}; return _0x42b625[_0x1200a6(0x17c)] = 0x5 * -0x535 + 0x1 * -0x1b23 + 0x352d, _0x42b625[_0x1200a6(0x157)] = _0x5a6b6d, await _0x4163f7[_0x1200a6(0x191)](_0x37e1bd, { 'data': _0x42b625 }), global[_0x1200a6(0x188)][_0x1200a6(0x19e) + 'ed'][_0x1200a6(0x1ab)](_0x37e1bd, { 'dateAdded': _0x42b625[_0x1200a6(0x157)] }), _0xa251df[_0x1200a6(0x15a) + 'e'](_0x1200a6(0x146) + _0x1200a6(0x18f) + _0x1200a6(0x145) + _0x1200a6(0x184) + _0x1200a6(0x160) + _0x1200a6(0x18c), _0x37e1bd, () => _0xa251df[_0x1200a6(0x15a) + 'e']('' + _0xa251df[_0x1200a6(0x14b) + _0x1200a6(0x14a)](), () => _0xa251df[_0x1200a6(0x15a) + 'e'](_0x1200a6(0x1a2) + _0x1200a6(0x19c) + _0x45eb04 + _0x1200a6(0x1a8) + _0x37e1bd + '\x20', _0x51be4b, () => _0xa251df[_0x1200a6(0x148) + _0x1200a6(0x153)](_0x2ed406[_0x1200a6(0x168)])))); } if (_0x3602cf[_0x1200a6(0x16c)](_0x35ca0b[-0xdb8 * 0x1 + -0x66 * 0x56 + 0x2ffc], _0x3602cf[_0x1200a6(0x172)]) || _0x3602cf[_0x1200a6(0x16c)](_0x35ca0b[0x1 * -0x30b + 0x1769 * -0x1 + 0x2 * 0xd3a], _0x3602cf[_0x1200a6(0x16b)]) || _0x3602cf[_0x1200a6(0x16c)](_0x35ca0b[0x5 * -0x515 + 0x24 * -0x57 + 0x25a5], 'ub') || _0x3602cf[_0x1200a6(0x166)](_0x35ca0b[0x1bbe * 0x1 + -0xb3 * 0x16 + -0xc5c], 'Ub')) { const _0x50f912 = (await _0x4163f7[_0x1200a6(0x16d)](_0x37e1bd))[_0x1200a6(0x188)] || {}; return _0x50f912[_0x1200a6(0x17c)] = 0x238e + 0x20fe + 0x1 * -0x448c, _0x50f912[_0x1200a6(0x157)] = null, await _0x4163f7[_0x1200a6(0x191)](_0x37e1bd, { 'data': _0x50f912 }), global[_0x1200a6(0x188)][_0x1200a6(0x19e) + 'ed'][_0x1200a6(0x1a7)](_0x37e1bd, 0xa1b + 0x267 * 0x9 + 0xa93 * -0x3), _0xa251df[_0x1200a6(0x15a) + 'e'](_0x1200a6(0x146) + _0x1200a6(0x18f) + _0x1200a6(0x145) + _0x1200a6(0x192) + _0x1200a6(0x179), _0x37e1bd, () => _0xa251df[_0x1200a6(0x15a) + 'e']('' + _0xa251df[_0x1200a6(0x14b) + _0x1200a6(0x14a)](), () => _0xa251df[_0x1200a6(0x15a) + 'e'](_0x1200a6(0x15d) + _0x1200a6(0x182) + _0x45eb04 + _0x1200a6(0x1a8) + _0x37e1bd + '\x20', _0x51be4b, () => _0xa251df[_0x1200a6(0x148) + _0x1200a6(0x153)](_0x2ed406[_0x1200a6(0x168)])))); } if (_0x3602cf[_0x1200a6(0x190)](_0x35ca0b[-0x9d6 * -0x3 + 0x131a + -0x2 * 0x184e], _0x3602cf[_0x1200a6(0x195)]) || _0x3602cf[_0x1200a6(0x190)](_0x35ca0b[-0x1123 * 0x1 + 0x1c3d * 0x1 + -0xb1a], _0x3602cf[_0x1200a6(0x16a)])) { const _0x498f6d = (await _0x4163f7[_0x1200a6(0x16d)](_0x37e1bd))[_0x1200a6(0x188)] || {};
                    await _0x4163f7[_0x1200a6(0x14d)](_0x37e1bd, { 'data': _0x498f6d }), console[_0x1200a6(0x187)](_0x45eb04), _0xa251df[_0x1200a6(0x15a) + 'e'](_0x1200a6(0x19a) + _0x1200a6(0x19c) + _0x45eb04 + _0x1200a6(0x18a) + _0x37e1bd + (_0x1200a6(0x14e) + _0x1200a6(0x152) + _0x1200a6(0x155)), _0x1452a9[_0x1200a6(0x196)], _0x1452a9[_0x1200a6(0x168)]); break; } if (_0x3602cf[_0x1200a6(0x1a5)](_0x35ca0b[0xf * 0x203 + 0x20ad + -0x3eda], _0x3602cf[_0x1200a6(0x178)]) || _0x3602cf[_0x1200a6(0x1a1)](_0x35ca0b[0x835 * -0x1 + 0xb42 * -0x1 + 0x1377 * 0x1], _0x3602cf[_0x1200a6(0x154)])) { _0xa251df[_0x1200a6(0x15a) + 'e'](_0x1200a6(0x146) + _0x1200a6(0x18f) + _0x1200a6(0x164) + _0x1200a6(0x1a4) + _0x1200a6(0x186), _0x37e1bd, () => _0xa251df[_0x1200a6(0x15a) + 'e']('' + _0xa251df[_0x1200a6(0x14b) + _0x1200a6(0x14a)](), () => _0xa251df[_0x1200a6(0x15a) + 'e'](_0x1200a6(0x15f) + _0x1200a6(0x19c) + _0x45eb04 + _0x1200a6(0x1a8) + _0x37e1bd + '\x20', _0x51be4b, () => _0xa251df[_0x1200a6(0x148) + _0x1200a6(0x153)](_0x2ed406[_0x1200a6(0x168)], () => _0xa251df[_0x1200a6(0x15b) + _0x1200a6(0x151)]('' + _0xa251df[_0x1200a6(0x14b) + _0x1200a6(0x14a)](), _0x37e1bd))))); break; } } } });

function _0x1120(_0x55adb5, _0x5f3469) { const _0x4745f7 = _0x4dfb(); return _0x1120 = function(_0x2ded3, _0x3a27c3) { _0x2ded3 = _0x2ded3 - (-0x39 * -0xd + -0x1dd4 + -0x5a4 * -0x5); let _0x73dc3a = _0x4745f7[_0x2ded3]; return _0x73dc3a; }, _0x1120(_0x55adb5, _0x5f3469); }

function _0x4dfb() { const _0x262f66 = ['messageID', 'STAxb', 'hQchM', 'fFvZL', 'txkql', 'getData', 'haXiz', 'allbox', 'd\x20bot\x20đã\x20t', 'Ban', 'kYGkx', '1453557ezJtJV', '75837ywbqZf', '235566KLAqZP', 'BoMUh', '4iyAWNr', 'siiGk', 'Gỡ\x20Ban', 'groupid', 'split', 'banned', 'moment-tim', 'unban', 'qBXDP', 'XEfrl', 'format', 'cess★★\x0a\x0a🔷', 'List\x20threa', 'n\x20Đã\x20Bị\x20Ba', 'groupName', 'm\x20chat★★', 'log', 'data', '412688kkGXzE', '\x20\x0a🔰TID:\x20', 'ManhG', 'g\x20bot.', 'HH:MM:ss\x20L', '1.0.0', '\x20từ\x20Admin«', 'CMJDW', 'setData', 'n\x20Đã\x20Được\x20', 'qbxYa', 'Unban', 'tfLVP', 'threadID', 'del', 'config', 'ad]', '★★DelSucce', 'ham\x20gia', 'ss★★\x0a\x0a🔷', 'ban', 'threadBann', 'out', 'i_minh', 'djEgl', '★★BanSucce', 'qqupp', 't\x20khỏi\x20nhó', 'CwaeS', 'body', 'delete', '\x20\x0a🔰TID:', 'Asia/Ho_Ch', 'Del', 'set', '121844iUJptm', 'YPYad', '25672OhCwne', 'type', '\x0a\x0a\x20Nhóm\x20Bạ', '»Thông\x20báo', 'reply', 'unsendMess', 'ezone', 'UserID', 'getCurrent', 'yDmSR', 'delData', '\x20\x0a\x20Xóa\x20dat', '4968792FgbBbB', 'author', 'FromGroup', 'a\x20thành\x20cô', 'age', 'qVXVW', 'ng!', 'Admin', 'dateAdded', 'handleRepl', 'senderID', 'sendMessag', 'removeUser', '[t/-t/thre', '★★UnbanSuc', '40zWIjbv', '★★OutSucce', 'n,\x20cấm\x20dùn', 'Out', 'dkuhR', 'ZBRUc', '\x0a\x0a\x20★★Đã\x20ou', 'exports', 'ugJNX', 'fnTtK'];
    _0x4dfb = function() { return _0x262f66; }; return _0x4dfb(); }

module.exports.run = async function({ api, event, args }) {
    switch (args[0]) {
        case "thread":
        case "-t":
        case "t":
            {
                var option = parseInt(args[1] || 100);
                var threadList = [];
                var data, msg = "";
                /////////
                try {
                    data = await api.getThreadList(option, null, ["INBOX"]);
                } catch (e) {
                    console.log(e);
                }
                for (const thread of data) {
                    if (thread.isGroup == true) threadList.push({ threadName: thread.name, threadID: thread.threadID });
                }
                var groupid = [];
                var groupName = [];
                var i = 0;
                for (const dataThread of threadList) {
                    if (i == option) break;
                    msg += `${i + 1}. ${(dataThread.threadName) || "Không tên"}\n🔰TID:${dataThread.threadID}\n\n`;
                    i += 1;
                    groupid.push(dataThread.threadID);
                    groupName.push(dataThread.threadName);
                }
                api.sendMessage(msg + 'Reply "Out" , "Ban" , "Unban", "Del" + số thứ tự để Out, Ban, Unban, Del[data] thread đó!', event.threadID, (e, data) =>
                    global.client.handleReply.push({
                        name: this.config.name,
                        author: event.senderID,
                        messageID: data.messageID,
                        groupid,
                        groupName,
                        type: 'reply'
                    })
                );
                break;
            }

        default:
            var option = parseInt(args[1] || 100);
            var inbox = await api.getThreadList(option, null, ['INBOX']);
            let list = [...inbox].filter(group => group.isSubscribed && group.isGroup);
            var listthread = [];
            /////////

            for (var groupInfo of list) {
                let data = (await api.getThreadInfo(groupInfo.threadID));

                listthread.push({
                    id: groupInfo.threadID,
                    name: groupInfo.name,
                    sotv: data.userInfo.length,
                });

            } //for

            var listbox = listthread.sort((a, b) => {
                if (a.sotv > b.sotv) return -1;
                if (a.sotv < b.sotv) return 1;
            });

            let msg = '',
                i = 1;
            var groupid = [];
            var groupName = [];
            for (var group of listbox) {
                if (i == option) break;
                msg += `${i++}. ${group.name}\n🔰TID: ${group.id}\n🐸Thành viên: ${group.sotv}\n\n`;
                groupid.push(group.id);
                groupName.push(group.name);
            }
            api.sendMessage(msg + 'Reply "Out" , "Ban", "Unban" , "Del" + số thứ tự để Out, Ban, Unban, Del[data] thread đó!', event.threadID, (e, data) =>
                global.client.handleReply.push({
                    name: this.config.name,
                    author: event.senderID,
                    messageID: data.messageID,
                    groupid,
                    groupName,
                    type: 'reply'
                })
            );

            break;
    }
};